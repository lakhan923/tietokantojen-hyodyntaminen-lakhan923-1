@page "/"
@using BlazorApp.Models
@inject EventController EventService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h3>Events by Month</h3>
@foreach (var monthGroup in events.GroupBy(e => e.StartDate.ToString("MMMM yyyy")))
{
	<h4>@monthGroup.Key</h4>
	<table class="table">
		<thead>
			<tr>
				<th>Title</th>
				<th>Start</th>
				<th>End</th>
				<th>Location</th>
				<th>Category</th>
				<th>Description</th>
				<th>Actions</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var eventItem in monthGroup)
			{
				<tr>
					<td>@eventItem.Title</td>
					<td>@eventItem.StartDate.ToShortDateString()</td>
					<td>@eventItem.EndDate.ToShortDateString()</td>
					<td>@eventItem.Location</td>
					<td>@eventItem.Category?.Name</td>
					<td>@eventItem.Category?.Description</td>
					<td>
						<button class="btn btn-primary" @onclick="() => EditEvent(eventItem.Id)">Edit</button>
						<button class="btn btn-danger" @onclick="() => DeleteEvent(eventItem.Id)">Delete</button>
					</td>
				</tr>
			}
		</tbody>
	</table>
}

<button class="btn btn-success" @onclick="AddEvent">Add New Event</button>

@code {

	private List<Event> events = new();
	protected override async Task OnInitializedAsync()
	{
		events = await EventService.GetAllEventsAsync();
	}

	private void AddEvent()
	{
		Navigation.NavigateTo("/eventform"); // Navigates to the EventForm for a new event
	}

	private async Task DeleteEvent(int eventId)
	{
		await EventService.DeleteEventAsync(eventId);
		events = await EventService.GetAllEventsAsync(); // Refresh the event list
	}

	private void EditEvent(int eventId)
	{
		Navigation.NavigateTo($"/eventform/{eventId}"); 
	}
}
